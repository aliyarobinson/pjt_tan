// rem font size
@mixin font-size($size-value) {
  font-size: ($size-value) + px;
  font-size: ($size-value / 10) + rem;
}

// vendor prefixing
@mixin css3($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
    #{$prefix}#{$property}: $value;
  }
}

// opacity
@mixin opacity($opacity) {
  $opacity-ie: $opacity*100;
  filter: alpha(opacity=$opacity-ie);
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
}

// Respond-To different device sizes (Responsive Breakpoints)
@mixin respond-to($media) {
  @if $media == phone {
    @media (max-width: $breakpoint-phone-to-tablet - 1) { @content; }
  } @else if $media == tablet {
    @media (min-width: $breakpoint-phone-to-tablet) and (max-width: $breakpoint-tablet-to-desktop - 1) { @content; }
  } @else if $media == desktop {
    @media (min-width: $breakpoint-tablet-to-desktop) and (max-width: $breakpoint-desktop-to-extralarge - 1) { @content; }
  } @else if $media == extralarge {
    @media (min-width: $breakpoint-desktop-to-extralarge) { @content; }
  }
}

// Apply Font Face
@mixin font-face($family, $src, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    src: url('#{$src}.eot'); // IE9 compat
    src: url('#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
    url('#{$src}.woff') format('woff'), // standards
    url('#{$src}.woff2') format('woff2'), // standards
    url('#{$src}.ttf') format('truetype'), // Safari, Android, iOS
    url('#{$src}.svg##{$family}') format('svg'); // legacy iOS
    font-style: $style;
    font-weight: $weight;
  }
}

// Align Vertically to Parent
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}


@mixin tapperedLinearGradient($start, $mid, $end){
    background: $mid; 
    background:  -moz-linear-gradient(to right,  $start 0%,$mid 50%,$end 100%);
    background:  -webkit-linear-gradient(to right,  $start 0%,$mid 50%,$end 100%);
    background:  -o-linear-gradient(to right,  $start 0%,$mid 50%,$end 100%);
    background:  -ms-linear-gradient(to right,  $start 0%,$mid 50%,$end 100%);
    background:  linear-gradient(to right,  $start 0%,$mid 50%,$end 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=$start, endColorstr=$end,GradientType=0 ); 
}